plugins {
	id "java"
	id "idea" // all of us use ida
	id "fabric-loom" version "0.2.7-SNAPSHOT"
	id "maven-publish"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "${project.archives_base_name}"
group = "${project.maven_group}"
version = "${project.mod_version}+${project.minecraft_version}"

minecraft {
}

repositories {
	mavenCentral()
	maven { url "https://maven.fabricmc.net/" } // Fabric maven - home of Fabric API and ModMenu
	//maven { url "https://server.bbkr.space/artifactory/libs-release" } // Cotton maven - home of Cotton projects
	//maven { url "https://maven.abusedmaster.xyz" } // NerdHub maven - home of Cardinal Components
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	compileOnly 'org.jetbrains:annotations:19.0.0' // anno
	// other mod dependencies
	modImplementation "me.shedaniel:RoughlyEnoughItems:3.6.4"
	modApi "teamreborn:energy:0.1.0"
	modImplementation "io.github.prospector:modmenu:1.10.2+build.32"
}

processResources {
	inputs.property "version", project.version
	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand version: project.version
	}
	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		maven(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			//artifact(jar) {
			//	builtBy remapJar
			//}
			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") { //release jar - file location not provided anywhere in loom
				classifier null
				builtBy remapJar
			}

			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
